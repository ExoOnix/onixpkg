#!/bin/bash

OPM_DIR="/opt/opm"
INSTALL_DIR="/usr/local/bin"
PACKAGES_DIR="$OPM_DIR/packages"
INSTALLED_PACKAGES="$OPM_DIR/installed-packages.txt"

# Create the necessary directories
mkdir -p "$OPM_DIR" "$PACKAGES_DIR"

# Function to install a package
install_package() {
  package_file="$1"
  package_name=$(basename "$package_file" .opm)

  if [ -f "$PACKAGES_DIR/$package_name" ]; then
    echo "Package $package_name is already installed."
    return 1
  fi

  if tar xf "$package_file" -C "$PACKAGES_DIR"; then
    if [ -f "$PACKAGES_DIR/$package_name/install" ]; then
      fakeroot sh "$PACKAGES_DIR/$package_name/install"
      if [ $? -eq 0 ]; then
        echo "$package_name" >> "$INSTALLED_PACKAGES"
        echo "Package $package_name installed successfully."
      else
        echo "Failed to install $package_name."
      fi
    else
      echo "No installation instructions found for $package_name."
    fi
  else
    echo "Failed to extract $package_file."
  fi
}

# Function to uninstall a package
uninstall_package() {
  package_name="$1"

  if [ -f "$PACKAGES_DIR/$package_name" ]; then
    if [ -f "$PACKAGES_DIR/$package_name/uninstall" ]; then
      fakeroot sh "$PACKAGES_DIR/$package_name/uninstall"
      if [ $? -eq 0 ]; then
        rm -rf "$PACKAGES_DIR/$package_name"
        sed -i "/$package_name/d" "$INSTALLED_PACKAGES"
        echo "Package $package_name uninstalled successfully."
      else
        echo "Failed to uninstall $package_name."
      fi
    else
      echo "No uninstallation instructions found for $package_name."
    fi
  else
    echo "Package $package_name is not installed."
  fi
}

# Function to list installed packages
list_installed_packages() {
  cat "$INSTALLED_PACKAGES" 2>/dev/null || echo "No packages installed."
}

# Main program
if [ "$1" == "install" ] && [ -f "$2" ]; then
  install_package "$2"
elif [ "$1" == "uninstall" ] && [ -n "$2" ]; then
  uninstall_package "$2"
elif [ "$1" == "list" ]; then
  list_installed_packages
else
  echo "Usage: $0 [install <package.opm> | uninstall <package_name> | list]"
  exit 1
fi
